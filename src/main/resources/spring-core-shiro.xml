<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="${password.algorithmName}"/>
        <property name="hashIterations" value="${password.hashIterations}"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="cn.ocoop.ssf.shiro.realm.SubjectRealm">
        <property name="subjectService" ref="subjectService"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <!--<property name="cachingEnabled" value="true"/>-->
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180000"/>
    </bean>

    <!-- 会话DAO -->
    <!--<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
    <!--<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>-->
    <!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
    <!--</bean>-->
    <bean id="sessionDAO" class="cn.ocoop.ssf.shiro.session.mgt.ShiroSessionDao">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        <property name="shiroSessionRepositoryAware">
            <bean class="cn.ocoop.ssf.shiro.session.mgt.ShiroSessionDaoRedisAdapter"
                  p:redisTemplate-ref="redisTemplate"/>
        </property>
    </bean>

    <!-- 会话验证调度器 -->
    <!--<bean id="sessionValidationScheduler"-->
    <!--class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">-->
    <!--<property name="interval" value="1800000"/>-->
    <!--<property name="sessionManager" ref="sessionManager"/>-->
    <!--</bean>-->

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <!--<property name="deleteInvalidSessions" value="true"/>-->
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>-->
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 缓存管理器 使用Redis实现 -->
    <bean id="cacheManager" class="cn.ocoop.ssf.shiro.session.mgt.ShiroCacheManager">
        <property name="shiroCacheManagerAware">
            <bean class="cn.ocoop.ssf.shiro.session.mgt.ShiroCacheManagerRedisAdapter"
                  p:redisTemplate-ref="redisTemplate"
                    />
        </property>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager">
            <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager">
                <property name="cipherKey" value="aaaa"/>
                <property name="cookie">
                    <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                        <property name="name" value="rememberMe"/>
                        <property name="maxAge" value="3800000"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="cn.ocoop.ssf.shiro.filter.authc.FormAuthenticationFilterAdapter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>
    <bean id="permissionsAuthorizationFilter"
          class="cn.ocoop.ssf.shiro.filter.authz.PermissionsAuthorizationFilterAdapter"/>
    <bean id="rolesAuthorizationFilter" class="cn.ocoop.ssf.shiro.filter.authz.RolesAuthorizationFilterAdapter"/>

    <!--<bean id="sslFilter" class="org.apache.shiro.web.filter.authz.SslFilter">-->
    <!--<property name="port" value="8888"/>-->
    <!--</bean>-->
    <!--<bean id="filterChainManager" class="org.apache.shiro.web.filter.mgt.DefaultFilterChainManager"/>-->
    <bean id="filterChainManager" class="cn.ocoop.ssf.shiro.web.DefaultFilterChainManager"/>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="cn.ocoop.ssf.shiro.ShiroFilterFactoryBean">
        <property name="manager" ref="filterChainManager"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="perms" value-ref="permissionsAuthorizationFilter"/>
                <entry key="roles" value-ref="rolesAuthorizationFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login = authc
                /logout = logout
                /** = authc
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>